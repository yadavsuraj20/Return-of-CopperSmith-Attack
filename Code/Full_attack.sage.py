
# This file was *autogenerated* from the file Full_attack.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_1428 = Integer(1428); _sage_const_7 = Integer(7); _sage_const_144232789069271883512611713774877402831210570440566770441755650506648048135262107760386369028414537535982562955069908031252963329370791390046449140798939859996010 = Integer(144232789069271883512611713774877402831210570440566770441755650506648048135262107760386369028414537535982562955069908031252963329370791390046449140798939859996010); _sage_const_0 = Integer(0); _sage_const_226740417611888036820712213674324302174869885035028963115201784550790316778187125705786574093030940610149506493790642121670630108816163569275478310828108699220477865957823010820958169655242202846457652454315163672455836480301324021058409409361410899209758268076987842949337435817645545149159592629869912899446243919930 = Integer(226740417611888036820712213674324302174869885035028963115201784550790316778187125705786574093030940610149506493790642121670630108816163569275478310828108699220477865957823010820958169655242202846457652454315163672455836480301324021058409409361410899209758268076987842949337435817645545149159592629869912899446243919930); _sage_const_20 = Integer(20); _sage_const_45092197507717713174331239195330276496994910 = Integer(45092197507717713174331239195330276496994910); _sage_const_10000 = Integer(10000); _sage_const_10001 = Integer(10001); _sage_const_2048 = Integer(2048); _sage_const_3377766159977061826604703412833277001367257204956613218025881383243158411145143430 = Integer(3377766159977061826604703412833277001367257204956613218025881383243158411145143430); _sage_const_65537 = Integer(65537); _sage_const_256 = Integer(256); _sage_const_1024 = Integer(1024); _sage_const_512 = Integer(512); _sage_const_39 = Integer(39); _sage_const_10 = Integer(10); _sage_const_126 = Integer(126); _sage_const_71 = Integer(71); _sage_const_3796316434940014295310 = Integer(3796316434940014295310); _sage_const_225 = Integer(225)#Authors: Daniel J. Bernstein and Tanja Lange
#Origin:
from sage.doctest.util import Timer

prime_list = list(i for i in range(_sage_const_2 ,_sage_const_1428 ) if is_prime(i))

def primorial(n):
    x = _sage_const_1 
    for i in range(n):
        x *= prime_list[i]
    return x

t = Timer()

sizeofN = input('Size of N(256,512,1024,2048,4096) : ')
if(sizeofN==_sage_const_256 ):
  num = _sage_const_20 
  v = _sage_const_3796316434940014295310 
elif(sizeofN==_sage_const_512 ):
  num = _sage_const_39 
  v = _sage_const_45092197507717713174331239195330276496994910 
elif(sizeofN==_sage_const_1024 ):
  num =_sage_const_71 
  v = _sage_const_3377766159977061826604703412833277001367257204956613218025881383243158411145143430 
elif(sizeofN==_sage_const_2048 ):
  num = _sage_const_126 
  v = _sage_const_144232789069271883512611713774877402831210570440566770441755650506648048135262107760386369028414537535982562955069908031252963329370791390046449140798939859996010 
else:
  num = _sage_const_225 
  v = _sage_const_226740417611888036820712213674324302174869885035028963115201784550790316778187125705786574093030940610149506493790642121670630108816163569275478310828108699220477865957823010820958169655242202846457652454315163672455836480301324021058409409361410899209758268076987842949337435817645545149159592629869912899446243919930 

L = primorial(num)
g = Mod(_sage_const_65537 ,L)

print "Value of M' : ",v

n = raw_input('N : ')
n = int(n)
g = Mod(g,v)
order2 = g.multiplicative_order()
print 'Order : ',order2
order2 = order2/_sage_const_10000 

for i in range(_sage_const_10001 ):
    found = False
    for j in range(i*order2,(i+_sage_const_1 )*order2):
        t.start()
        u = lift(g**j)
        power = sizeofN//_sage_const_2  - _sage_const_3 
        H = _sage_const_10  + _sage_const_2 **(power) // v
        u += floor((_sage_const_7 *_sage_const_2 **(power)) // v) * v

        w = lift(_sage_const_1 /Mod(v,n))

        R = QQ['x']; (x,) = R._first_ngens(1)
        f = (w*u+H*x)/n
        g1 = H*x
        k = _sage_const_3 
        m = _sage_const_7 
        # print 'multiplicity', 3
        # print 'lattice rank', 7

        basis = [f**j for j in range(_sage_const_0 ,k)] + [f**k*g1**j for j in range(m-k)]
        basis = [b*n**k for b in basis]
        basis = [b.change_ring(ZZ) for b in basis]

        M = matrix(m)
        for i in range(m):
            M[i] = basis[i].coefficients(sparse=False) + [_sage_const_0 ]*(m-_sage_const_1 -i)
        
        M = M.LLL()
        Q = sum(z*(x/H)**i for i,z in enumerate(M[_sage_const_0 ]))
        for r,multiplicity in Q.roots():
            print 'root found : ',r
            if u+v*r > _sage_const_0 :
                g1 = gcd(n,u+v*r)
                if g1 > _sage_const_1 : print 'successful factorization',[g1,n/g1]; found = True; break
        if(found):
            break

    if(found):
      break

