
# This file was *autogenerated* from the file key_generation.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2048 = Integer(2048); _sage_const_1 = Integer(1); _sage_const_1428 = Integer(1428); _sage_const_71 = Integer(71); _sage_const_2 = Integer(2); _sage_const_65537 = Integer(65537); _sage_const_256 = Integer(256); _sage_const_1024 = Integer(1024); _sage_const_512 = Integer(512); _sage_const_10000 = Integer(10000); _sage_const_39 = Integer(39); _sage_const_4 = Integer(4); _sage_const_225 = Integer(225); _sage_const_126 = Integer(126); _sage_const_20 = Integer(20)
from sage.doctest.util import Timer

t = Timer()

sizeofN = input('Size of N(256,512,1024,2048,4096) : ')
if(sizeofN==_sage_const_256 ):
    num = _sage_const_20 
elif(sizeofN==_sage_const_512 ):
  num = _sage_const_39 
elif(sizeofN==_sage_const_1024 ):
  num =_sage_const_71 
elif(sizeofN==_sage_const_2048 ):
  num = _sage_const_126 
else:
  num = _sage_const_225 

prime_list = list(i for i in range(_sage_const_2 ,_sage_const_1428 ) if is_prime(i))

def primorial(n):
    x = _sage_const_1 
    for i in range(n):
        x *= prime_list[i]
    return x

L = primorial(num)

g = Mod(_sage_const_65537 ,L)

power = sizeofN//_sage_const_2  -_sage_const_2 

pmin = _sage_const_3 *_sage_const_2 **power
pmax = _sage_const_4 *_sage_const_2 **power

t.start()
x = _sage_const_10000 
# x = 50
u = lift(g**x)
while True:
  p = u + randrange(ceil(pmin/L),floor(pmax/L)) * L
  if p.is_prime(): print 'p',p ;break

t.start()
u = lift(g**randrange(L))
while True:
  q = u + randrange(ceil(pmin/L),floor(pmax/L)) * L
  if q.is_prime(): print 'q',q ;break

N = p*q
print 'N : ',N

